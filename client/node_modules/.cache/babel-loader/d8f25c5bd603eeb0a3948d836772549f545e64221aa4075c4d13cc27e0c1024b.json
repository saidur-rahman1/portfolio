{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Portfolio\\\\client\\\\src\\\\pages\\\\Contact\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport { Link } from \"react-router-dom\";\nimport { Grid } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport '../../App.css';\nimport '../../components/Timeline/Timeline.css';\nimport CustomButton from '../../components/Button/Button';\nimport { theme } from '../../themes/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  id: 0,\n  name: '',\n  nameError: false,\n  nameHelperText: '',\n  email: '',\n  emailError: false,\n  emailHelperText: '',\n  message: '',\n  messageError: false,\n  messageHelperText: ''\n};\nconst Contact = () => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const finalValidation = () => {\n    let isError = false;\n    const errors = {\n      nameError: false,\n      nameHelperText: '',\n      emailError: false,\n      emailHelperText: '',\n      messageError: false,\n      messageHelperText: ''\n    };\n    let emailChecker = /$^|.+@.+..+/.test(values.email);\n    if (!emailChecker || values.email === '') {\n      isError = true;\n      errors.emailHelperText = \"Enter valid email\";\n      errors.emailError = true;\n    }\n    if (values.name === '') {\n      isError = true;\n      errors.nameHelperText = \"Enter name\";\n      errors.nameError = true;\n    }\n    if (values.message === '') {\n      isError = true;\n      errors.messageHelperText = \"Enter message\";\n      errors.messageError = true;\n    }\n    setValues({\n      ...values,\n      ...errors\n    });\n    return isError;\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    const err = finalValidation();\n    if (!err) {\n      // let email = values.email;\n      // let company = values.company;\n      // let password1 = values.password1;\n      // let password2 = values.password2;\n\n      setValues({\n        ...values,\n        id: 0,\n        email: '',\n        emailError: false,\n        emailHelperText: '',\n        company: '',\n        companyError: false,\n        companyHelperText: '',\n        password1: '',\n        password1Error: false,\n        password1HelperText: '',\n        password2: '',\n        password2Error: false,\n        password2HelperText: ''\n      });\n    }\n  }\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"section pb_45\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"section_title mb_20\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"section_title_text\",\n          children: \"Contact Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              action: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 67\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                variant: \"outlined\",\n                label: \"Name\",\n                onChange: handleInputChange,\n                value: values.name,\n                error: values.nameError,\n                helperText: values.nameHelperText,\n                fullWidth: true,\n                required: true,\n                sx: {\n                  mb: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"email\",\n                variant: \"outlined\",\n                label: \"Email\",\n                onChange: handleInputChange,\n                value: values.email,\n                error: values.emailError,\n                helperText: values.emailHelperText,\n                fullWidth: true,\n                required: true,\n                sx: {\n                  mb: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                variant: \"outlined\",\n                label: \"Message\",\n                onChange: handleInputChange,\n                value: values.message,\n                error: values.messageError,\n                helperText: values.messageHelperText,\n                fullWidth: true,\n                required: true,\n                multiline: true,\n                rows: 5,\n                sx: {\n                  mb: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                  text: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Contact, \"4lcv5AY4KdEfpz8E2Yi+UXqs8J8=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","TextField","Link","Grid","ThemeProvider","CustomButton","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","initialValues","id","name","nameError","nameHelperText","email","emailError","emailHelperText","message","messageError","messageHelperText","Contact","_s","values","setValues","finalValidation","isError","errors","emailChecker","test","handleSubmit","event","preventDefault","err","company","companyError","companyHelperText","password1","password1Error","password1HelperText","password2","password2Error","password2HelperText","handleInputChange","e","value","target","children","container","className","item","fileName","_jsxFileName","lineNumber","columnNumber","xs","onSubmit","action","to","type","variant","label","onChange","error","helperText","fullWidth","required","sx","mb","multiline","rows","text","_c","$RefreshReg$"],"sources":["E:/Coding/Portfolio/client/src/pages/Contact/Contact.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { Grid } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\n\r\nimport '../../App.css';\r\nimport '../../components/Timeline/Timeline.css';\r\nimport CustomButton from '../../components/Button/Button';\r\nimport { theme } from '../../themes/theme';\r\n\r\nconst initialValues = {\r\n    id: 0,\r\n    name: '',\r\n    nameError: false,\r\n    nameHelperText: '',\r\n  \r\n    email: '',\r\n    emailError: false,\r\n    emailHelperText: '',\r\n  \r\n    message: '',\r\n    messageError: false,\r\n    messageHelperText: '',\r\n  };\r\n\r\nconst Contact = () => {\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    const finalValidation = () => {\r\n        let isError = false;\r\n        const errors = {\r\n            nameError: false,\r\n            nameHelperText: '',\r\n            \r\n            emailError: false,\r\n            emailHelperText: '',\r\n        \r\n            messageError: false,\r\n            messageHelperText: ''\r\n        };\r\n    \r\n        let emailChecker = (/$^|.+@.+..+/).test(values.email);\r\n        if (!emailChecker || values.email === '') {\r\n          isError = true;\r\n          errors.emailHelperText = \"Enter valid email\";\r\n          errors.emailError = true;\r\n        }\r\n    \r\n        if (values.name === '') {\r\n          isError = true;\r\n          errors.nameHelperText = \"Enter name\";\r\n          errors.nameError = true;\r\n        }\r\n\r\n        if (values.message === '') {\r\n            isError = true;\r\n            errors.messageHelperText = \"Enter message\";\r\n            errors.messageError = true;\r\n        }\r\n    \r\n    \r\n        setValues({\r\n          ...values,\r\n          ...errors\r\n        });\r\n    \r\n        return isError;\r\n    }\r\n \r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        const err = finalValidation();\r\n        if (!err) {\r\n        // let email = values.email;\r\n        // let company = values.company;\r\n        // let password1 = values.password1;\r\n        // let password2 = values.password2;\r\n\r\n\r\n        setValues({\r\n            ...values,\r\n            id: 0,\r\n            email: '',\r\n            emailError: false,\r\n            emailHelperText: '',\r\n\r\n            company: '',\r\n            companyError: false,\r\n            companyHelperText: '',\r\n\r\n            password1: '',\r\n            password1Error: false,\r\n            password1HelperText: '',\r\n\r\n            password2: '',\r\n            password2Error: false,\r\n            password2HelperText: '',\r\n        });\r\n        }\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n          ...values,\r\n          [name]:value\r\n        })\r\n      }\r\n\r\n    return(\r\n        <>\r\n            {/* Contact */}\r\n            <Grid container className='section pb_45'>\r\n                <Grid item className='section_title mb_20'>\r\n                    <span></span>\r\n                    <h6 className='section_title_text'>Contact Me</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <React.Fragment>\r\n                            <form onSubmit={handleSubmit} action={<Link to=\"/\" />}>\r\n                                {/* <Stack spacing={2} direction=\"row\" sx={{marginBottom: 4}}> */}\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        variant='outlined'\r\n                                        label=\"Name\"\r\n                                        onChange={handleInputChange}\r\n                                        value={values.name}\r\n                                        error={values.nameError}\r\n                                        helperText={values.nameHelperText}\r\n                                        fullWidth\r\n                                        required\r\n                                        sx={{mb: 4}}\r\n                                    />\r\n                                {/* </Stack> */}\r\n                                <TextField\r\n                                    type=\"email\"\r\n                                    variant='outlined'\r\n                                    label=\"Email\"\r\n                                    onChange={handleInputChange}\r\n                                    value={values.email}\r\n                                    error={values.emailError}\r\n                                    helperText={values.emailHelperText}\r\n                                    fullWidth\r\n                                    required\r\n                                    sx={{mb: 4}}\r\n                                />\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant='outlined'\r\n                                    label=\"Message\"\r\n                                    onChange={handleInputChange}\r\n                                    value={values.message}\r\n                                    error={values.messageError}\r\n                                    helperText={values.messageHelperText}\r\n                                    fullWidth\r\n                                    required\r\n                                    multiline\r\n                                    rows={5}\r\n                                    sx={{mb: 4}}\r\n                                />\r\n                                <div type=\"submit\"><CustomButton text={\"Submit\"} /></div>\r\n                            </form>\r\n                        </React.Fragment>\r\n                    </ThemeProvider>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}